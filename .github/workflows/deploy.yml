name: Deploy to Production

on:
  push:
    branches: [main]
  workflow_dispatch: # Allow manual deployment

jobs:
  deploy:
    name: Deploy to Server
    runs-on: ubuntu-latest
    environment: production # Add environment protection

    steps:
      - name: Deploy to server
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.PRODUCTION_HOST }}
          username: ${{ secrets.PRODUCTION_USER }}
          key: ${{ secrets.PRODUCTION_SSH_KEY }}
          port: 22
          timeout: 60s
          command_timeout: 10m
          script: |
            set -e  # Exit on any error

            # Navigate to project directory
            echo "📁 Navigating to project directory..."
            cd /root/codecave || { echo "❌ Project directory not found"; exit 1; }

            # Check if this is a git repository
            echo "🔍 Checking git repository status..."
            if [ ! -d ".git" ]; then
              echo "❌ Not a git repository. Cloning fresh copy..."
              cd /root
              rm -rf codecave
              git clone https://github.com/julianthant/codecave.git
              cd codecave
            else
              # Reset any local changes and pull latest
              echo "🔄 Resetting local changes and pulling latest..."
              git reset --hard HEAD
              git clean -fd
              git pull origin main || { echo "❌ Failed to pull latest changes"; exit 1; }
            fi

            # Verify the script exists
            echo "🔍 Verifying deployment script exists..."
            if [ ! -f "scripts/deploy-server.sh" ]; then
              echo "❌ Deploy script not found even after git pull"
              echo "📂 Current directory contents:"
              ls -la
              echo "📂 Scripts directory contents:"
              ls -la scripts/ || echo "Scripts directory doesn't exist"
              exit 1
            fi

            # Make deployment script executable
            echo "🔧 Making deployment script executable..."
            chmod +x scripts/deploy-server.sh

            # Run deployment script with Doppler token
            echo "🚀 Starting deployment..."
            DOPPLER_TOKEN="${{ secrets.DOPPLER_TOKEN }}" ./scripts/deploy-server.sh

            echo "🎉 Deployment completed successfully!"
